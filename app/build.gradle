/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id("org.openjfx.javafxplugin") version "0.0.13"
    id 'java-library'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.bytedeco:javacv:1.5.7'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation group: 'black.ninia', name: 'jep', version: '4.1.1'
    implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.1.2'
    implementation group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.7'
    implementation group: 'io.github.typhon0', name: 'AnimateFX', version: '1.2.4'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


javafx {
    version = "20"
    modules = [ 'javafx.controls' , 'javafx.fxml']
}

application {
    // Define the main class for the application.
    mainClass = 'rock.paper.scissors.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
